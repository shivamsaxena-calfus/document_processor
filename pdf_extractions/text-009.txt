Chapter 2

A First Example

As a first example, here is an implementation of Quicksort in Scala.
def sort(xs: Array[Int]) {
def swap(i: Int, j: Int) {
val t = xs(i); xs(i) = xs(j); xs(j) = t
}
def sort1(l: Int, r: Int) {
val pivot = xs((l + r) / 2)
var i = l; var j = r
while (i <= j) {
while (xs(i) < pivot) i += 1
while (xs(j) > pivot) j -= 1
if (i <= j) {
swap(i, j)
i += 1
j -= 1
}
}
if (l < j) sort1(l, j)
if (j < r) sort1(i, r)
}
sort1(0, xs.length - 1)
}

The implementation looks quite similar to what one would write in Java or C. We
use the same operators and similar control structures. There are also some minor
syntactical differences. In particular:
â€¢ Definitions start with a reserved word. Function definitions start with def,
variable definitions start with var and definitions of values (i.e. read only variables) start with val.

